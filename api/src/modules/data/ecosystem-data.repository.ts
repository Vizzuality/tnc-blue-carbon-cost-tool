import { EcosystemProject } from '@api/modules/data/ecosystem-data.entity';
import { DataSource, Repository } from 'typeorm';
import { Injectable } from '@nestjs/common';

@Injectable()
export class EcoSystemDataRepository extends Repository<EcosystemProject> {
  columns = this.metadata.columns
    .filter((c) => !c.isPrimary)
    .map((c) => c.propertyName);

  constructor(private datasource: DataSource) {
    super(EcosystemProject, datasource.createEntityManager());
  }

  /**
   * @description Insert data into the database and performs an upsert if the data already exists
   * @todo: We are now using all columns to determine if the data already exists, define which columns are relevant here, as ID is generated by the database and cant be used
   */
  async insertData(data: EcosystemProject[]): Promise<any> {
    return this.createQueryBuilder()
      .insert()
      .into(EcosystemProject)
      .values(data)
      .orUpdate(this.columns, this.columns, {
        skipUpdateIfNoValuesChanged: true,
      })
      .execute();
  }
}
