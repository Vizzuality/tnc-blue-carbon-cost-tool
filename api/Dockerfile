FROM node:22.2.0-alpine

ARG DB_HOST
ARG DB_PORT
ARG DB_NAME
ARG DB_USERNAME
ARG DB_PASSWORD
ARG ACCESS_TOKEN_SECRET
ARG ACCESS_TOKEN_EXPIRES_IN
ARG RESET_PASSWORD_TOKEN_SECRET
ARG RESET_PASSWORD_TOKEN_EXPIRES_IN
ARG EMAIL_CONFIRMATION_TOKEN_SECRET
ARG EMAIL_CONFIRMATION_TOKEN_EXPIRES_IN
ARG AWS_SES_ACCESS_KEY_ID
ARG AWS_SES_ACCESS_KEY_SECRET
ARG AWS_SES_DOMAIN
ARG AWS_REGION

ENV DB_HOST $DB_HOST
ENV DB_PORT $DB_PORT
ENV DB_NAME $DB_NAME
ENV DB_USERNAME $DB_USERNAME
ENV DB_PASSWORD $DB_PASSWORD
ENV ACCESS_TOKEN_SECRET $ACCESS_TOKEN_SECRET
ENV ACCESS_TOKEN_EXPIRES_IN $ACCESS_TOKEN_EXPIRES_IN
ENV RESET_PASSWORD_TOKEN_SECRET $RESET_PASSWORD_TOKEN_SECRET
ENV RESET_PASSWORD_TOKEN_EXPIRES_IN $RESET_PASSWORD_TOKEN_EXPIRES_IN
ENV EMAIL_CONFIRMATION_TOKEN_SECRET $EMAIL_CONFIRMATION_TOKEN_SECRET
ENV EMAIL_CONFIRMATION_TOKEN_EXPIRES_IN $EMAIL_CONFIRMATION_TOKEN_EXPIRES_IN
ENV AWS_SES_ACCESS_KEY_ID $AWS_SES_ACCESS_KEY_ID
ENV AWS_SES_ACCESS_KEY_SECRET $AWS_SES_ACCESS_KEY_SECRET
ENV AWS_SES_DOMAIN $AWS_SES_DOMAIN
ENV AWS_REGION $AWS_REGION


WORKDIR /app

COPY package.json pnpm-workspace.yaml pnpm-lock.yaml tsconfig.json ./
COPY api ./api
COPY shared ./shared

RUN corepack enable pnpm
RUN pnpm install

RUN pnpm api:build

EXPOSE 4000

CMD ["pnpm", "api:prod"]
